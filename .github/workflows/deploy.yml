name: Deploy to znam.fun v2

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create deployment package
      run: |
        # Создаем архив для деплоя
        zip -r deploy.zip . -x "node_modules/*" ".wwebjs_auth/*" ".wwebjs_cache/*" ".git/*" "*.log"
        
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: server276.hosting.reg.ru
        username: u3217624
        password: ${{ secrets.HOSTING_PASSWORD }}
        port: 22
        script: |
          # Создаем папку если её нет
          mkdir -p /var/www/u3217624/data/znam.fun
          cd /var/www/u3217624/data/znam.fun
          
          # Останавливаем текущий процесс если он запущен
          pkill -f "node server-multi.js" 2>/dev/null || true
          
          # Очищаем старые файлы
          rm -rf *
          
        script_stop: true
        
    - name: Upload files
      run: |
        # Копируем файлы на сервер
        scp -o StrictHostKeyChecking=no -P 22 deploy.zip u3217624@server276.hosting.reg.ru:/var/www/u3217624/data/znam.fun/
        
    - name: Setup and start server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: server276.hosting.reg.ru
        username: u3217624
        password: ${{ secrets.HOSTING_PASSWORD }}
        port: 22
        script: |
          cd /var/www/u3217624/data/znam.fun
          
          # Распаковываем архив
          unzip -o deploy.zip
          rm -f deploy.zip
          
          # Устанавливаем зависимости
          npm install --production
          
          # Создаем скрипт запуска
          cat > start.sh << 'EOF'
          #!/bin/bash
          cd /var/www/u3217624/data/znam.fun
          node server-multi.js > app.log 2>&1 &
          echo $! > app.pid
          echo "Server started with PID $(cat app.pid)"
          EOF
          
          chmod +x start.sh
          
          # Запускаем сервер
          ./start.sh
          
          # Создаем .htaccess для прокси
          cat > .htaccess << 'EOF'
          RewriteEngine On
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteRule ^(.*)$ http://localhost:3001/$1 [P,L]
          EOF
          
          echo "Deployment completed successfully!" 