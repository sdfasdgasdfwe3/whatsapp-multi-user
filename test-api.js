#!/usr/bin/env node

const fetch = require('node-fetch');

const BASE_URL = 'http://89.104.66.62:3001';

async function testAPI() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...\n');

    try {
        // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
        console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞...');
        const testResponse = await fetch(`${BASE_URL}/api/test`);
        if (testResponse.ok) {
            const testData = await testResponse.json();
            console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω:', testData.message);
        } else {
            console.log('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
            return;
        }

        // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
        const dbResponse = await fetch(`${BASE_URL}/api/db-status`);
        if (dbResponse.ok) {
            const dbData = await dbResponse.json();
            if (dbData.dbConnected) {
                console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
                console.log(`üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${dbData.productsCount}`);
            } else {
                console.log('‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
            }
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
        }

        // –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤...');
        const productsResponse = await fetch(`${BASE_URL}/api/products`);
        if (productsResponse.ok) {
            const productsData = await productsResponse.json();
            if (productsData.success) {
                console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${productsData.products.length} –ø—Ä–æ–¥—É–∫—Ç–æ–≤`);
                if (productsData.products.length > 0) {
                    console.log(`üì¶ –ü–µ—Ä–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç: ${productsData.products[0].name}`);
                }
            } else {
                console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤:', productsData.error);
            }
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤');
        }

        // –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–µ–π
        console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–µ–π...');
        const articlesResponse = await fetch(`${BASE_URL}/api/articles`);
        if (articlesResponse.ok) {
            const articlesData = await articlesResponse.json();
            if (articlesData.success) {
                console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${articlesData.articles.length} —Å—Ç–∞—Ç–µ–π`);
                if (articlesData.articles.length > 0) {
                    console.log(`üì∞ –ü–µ—Ä–≤–∞—è —Å—Ç–∞—Ç—å—è: ${articlesData.articles[0].title}`);
                }
            } else {
                console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–µ–π:', articlesData.error);
            }
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å—Ç–∞—Ç–µ–π');
        }

        // –¢–µ—Å—Ç 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...');
        const loginResponse = await fetch(`${BASE_URL}/api/auth/login`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                username: 'admin',
                password: 'admin123'
            })
        });

        if (loginResponse.ok) {
            const loginData = await loginResponse.json();
            if (loginData.success) {
                console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
                console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${loginData.user.username}`);
                console.log(`üîë –†–æ–ª—å: ${loginData.user.role}`);
            } else {
                console.log('‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', loginData.error);
            }
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
        }

        console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
        console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
        console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: npm run api-server');
        console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–æ—Ä—Ç 3001 –æ—Ç–∫—Ä—ã—Ç');
        console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    }
}

testAPI(); 